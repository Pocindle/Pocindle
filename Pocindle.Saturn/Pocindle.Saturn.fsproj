<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <OutputType>Exe</OutputType>
        <TargetFramework>net5.0</TargetFramework>
        <SpaRoot>../pocindle-client/</SpaRoot>
        <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
        <RunWorkingDirectory>$(MSBuildProjectDirectory)</RunWorkingDirectory>
    </PropertyGroup>

    <ItemGroup>
        <Content Include="openapi.json">
          <CopyToOutputDirectory>Always</CopyToOutputDirectory>
        </Content>
        <Content Include="appsettings.json" />
        <Compile Include="Core.fs" />
        <Compile Include="Database.fs" />
        <Compile Include="Config.fs" />
        <Compile Include="Pocket.fs" />
        <Compile Include="Auth.fs" />

        <Compile Include="Router.fs" />
        <Compile Include="Program.fs" />

        <Content Include="static\*.*">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </Content>
    </ItemGroup>

    <ItemGroup>
        <PackageReference Include="Dapper" Version="2.0.78" />
        <PackageReference Include="Giraffe" Version="5.0.0-rc-6" />
        <PackageReference Include="Microsoft.IdentityModel.JsonWebTokens" Version="6.10.0" />
        <PackageReference Include="Ply" Version="0.3.1" />
        <PackageReference Include="System.IdentityModel.Tokens.Jwt" Version="6.10.0" />
    </ItemGroup>

    <ItemGroup>
        <ProjectReference Include="..\Pocindle.Domain\Pocindle.Domain.fsproj" />
        <ProjectReference Include="..\Pocindle.Pocket\Pocindle.Pocket.fsproj" />
        <ProjectReference Include="..\Saturn\src\Saturn\Saturn.fsproj" />
    </ItemGroup>

    <ItemGroup>
        <Content Include="Properties\launchSettings.json" />
    </ItemGroup>

    <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
        <!-- Ensure Node.js is installed -->
        <Exec Command="node --version" ContinueOnError="true">
            <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
        </Exec>
        <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
        <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    </Target>

    <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
        <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build" />

        <!-- Include the newly-built files in the publish output -->
        <ItemGroup>
            <DistFiles Include="$(SpaRoot)build\**" />
            <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
                <!--Если указать так, как закомментировано, то бандл будет копироваться на папку ниже-->
                <!--<RelativePath>%(DistFiles.Identity)</RelativePath>-->
                <RelativePath>@(publish/%(DistFiles.Identity)</RelativePath>
                <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
                <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
            </ResolvedFileToPublish>
        </ItemGroup>
    </Target>

</Project>
